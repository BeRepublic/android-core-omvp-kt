apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        applicationId rootProject.ext.androidApplicationId
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
        testApplicationId rootProject.ext.testApplicationId

        // Load values defined in local.properties to BuildConfig.
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            if (!properties.isEmpty()) {
                for (String key : properties.keySet()) {
                    String parsedKey = key.replaceAll("\\.","_").toUpperCase()
                    String parsedValue = "\""+properties.getProperty(key).replaceAll("\\\\","/")+"\""
                    buildConfigField "String", parsedKey, parsedValue
                }
            }
        }

        // Inject build variables into the Manifest
        manifestPlaceholders = [schemaName: rootProject.ext.androidSchemaName]

        // property used to generate name apk [name-productFlavor-buildType.apk]
        setProperty("archivesBaseName", rootProject.ext.androidAppName)

        vectorDrawables.useSupportLibrary = true

        ext.betaDistributionReleaseNotesFilePath = rootProject.ext.betaDistributionReleaseNotesFilePath
        ext.betaDistributionGroupAliasesFilePath = rootProject.ext.betaDistributionGroupAliasesFilePath
        ext.betaDistributionNotifications = rootProject.ext.betaDistributionNotifications

        resValue "string", "facebook_app_id", rootProject.ext.facebookId
        resValue "string", "facebook_login_protocol_scheme", rootProject.ext.facebookSchemeId

        multiDexEnabled true
    }

    flavorDimensions "tier"

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/commons',
                            'src/main/res/layouts/dialog',
                            'src/main/res/layouts/home',
                            'src/main/res/layouts/sample',
                            'src/main/res/layouts/sample_list',
                            'src/main/res/layouts/sample_pager',
                            'src/main/res/layouts/sample_multiple',
                            'src/main/res/layouts/sample_location',
                            'src/main/res/layouts/sample_take_picture',
                            'src/main/res/layouts/splash',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }

    signingConfigs {
        debug {
            ext.enableCrashlytics = false
            storeFile file('../buildSystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('../buildSystem/release.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'androiddebugkey'
        }
    }

    productFlavors {
        mock {
            dimension "tier"
            applicationIdSuffix ".mock"
            versionNameSuffix "-mock"
            resValue "string", "app_name", rootProject.ext.androidAppName+" Mock"
            resConfigs "xxhdpi"
        }
        dev {
            dimension "tier"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue "string", "app_name", rootProject.ext.androidAppName+" Dev"
            resConfigs "xxhdpi"
        }
        prod {
            dimension "tier"
            resValue "string", "app_name", rootProject.ext.androidAppName
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
    }

    androidExtensions {
        experimental = true
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://clojars.org/repo/" }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':commons')
    implementation project(':components')
    implementation project(':domain')
    implementation project(':data')

    implementation deps.app.implementation
    compileOnly deps.app.compileOnly
    testImplementation deps.app.testImplementation
    testAnnotationProcessor deps.app.testAnnotationProcessor
    androidTestAnnotationProcessor deps.app.testAnnotationProcessor
    kapt deps.app.kapt

    implementation("com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}@aar") {
        transitive = true
    }

}

apply plugin: 'com.google.gms.google-services'
